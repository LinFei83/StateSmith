@startuml {{smName}}

' //////////////////////// STATE ORGANIZATION ///////////////////////
' Note: StateSmith treats state names and events as case insensitive.
' More info: https://github.com/StateSmith/StateSmith/wiki/PlantUML

state State1
state State2


' ///////////////////////// STATE HANDLERS /////////////////////////
' Syntax: https://github.com/StateSmith/StateSmith/wiki/Behaviors

[*] -> State1

' State1
State1: enter / count++;
State1: exit  / 
State1 --> State2 : event1

' State2
State2: enter / count += 10;
State2: exit  / 
State2 --> State1 : event2


' //////////////////////// StateSmith config ////////////////////////
' The below special comment block sets the StateSmith configuration.
' More info: https://github.com/StateSmith/StateSmith/issues/335

/'! $CONFIG : toml

[RenderConfig]
FileTop = """
    // Whatever you put in this `FileTop` section will end up 
    // being printed at the top of every generated code file.
    """

//!!<filter:C,CppC>
AutoExpandedVars = """
    uint16_t count; // this var can be referenced in diagram
    """

[RenderConfig.C]
# CFileExtension = ".inc" # if you want to include sm in another file
CFileExtension = ".cpp" //!!<line-filter:CppC>
HFileExtension = ".hpp" //!!<line-filter:CppC>
HFileIncludes = """
    #include <stdint.h> // required for count var
    """
CFileIncludes = """
    // #include "your_header_here.h"
    """

//!!</filter>


//!!<filter:CSharp>
AutoExpandedVars = """
    int count; // this var can be referenced in diagram
    """

[RenderConfig.CSharp]
# NameSpace = ""
# Usings = ""
# BaseList = "MyUserBaseClass, IMyOtherUserInterface"
# UseNullable = false
# UsePartialClass = false

//!!</filter>


//!!<filter:JavaScript>
AutoExpandedVars = """
    count: 0, // this var can be referenced in diagram
    """

[RenderConfig.JavaScript]
# ExtendsSuperClass = "MyUserBaseClass"
# UseExportOnClass = true

//!!</filter>

[SmRunnerSettings]
transpilerId = "C99"  //!!<line-filter:C,CppC>
transpilerId = "CSharp"  //!!<line-filter:CSharp>
transpilerId = "JavaScript"  //!!<line-filter:JavaScript>
'/
@enduml